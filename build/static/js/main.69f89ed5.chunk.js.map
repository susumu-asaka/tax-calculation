{"version":3,"sources":["components/cityState.tsx","Actions.tsx","containers/Locations.tsx","components/Locations.tsx","reducer.tsx","components/Transactions.tsx","containers/Transactions.tsx","configureStore.tsx","components/App.tsx","index.tsx"],"names":["cityState","entity","cityName","address","state","URL","fetchLocations","_this","this","dispatch","getState","tslib_es6","locationsCache","isFetching","locations","type","reducer","client","res","_a","sent","body","fetchLocationsSuccess","error","error_1","fetchTransactions","query","transactionsCache","transactions","lodash","fetchTransactionsStart","fetchTransactionsSuccess","error_2","Locations_Locations","Object","es","cache","onInit","react","reactstrap_es","length","style","opacity","map","location","index","key","Link","to","code","md","email","federalTaxId","phone","action","keyValueCurrency","value","currency","textAlign","float","toLocaleString","preloadedState","Transactions_Transactions","_b","search","query_string","page","Number","slice","Math","min","transaction","lg","header","transactionType","moment","transactionDate","format","documentCode","calculatedTaxSummary","subtotal","taxByType","iec","tax","ist","isc","grandTotal","store","redux","redux_thunk_es","react_dom","BrowserRouter","Switch","Route","exact","path","render","Redirect","component","document","getElementById"],"mappings":"uOAOO,SAASA,EAAUC,GACxB,GAAKA,EAEE,CACL,IAAMC,EAAWD,EAAOE,QAAQD,SAC1BE,EAAQH,EAAOE,QAAQC,MAC7B,OAAIF,EACQA,EAAQ,MAAME,EAEjBA,EAPT,MAAO,uBCDEC,EAAM,4BAiDZ,SAASC,IAAhB,IAAAC,EAAAC,KAEE,OAAO,SAAOC,EAAUC,GAAQ,OAAAC,EAAA,EAAAJ,OAAA,uFACxBK,EAAiBF,IAAWE,gBACdC,YAAeD,EAAeE,UAA9C,YACFL,EAxCG,CACLM,KAAM,yBACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KAAKP,EAAK,CAAEQ,eAAgB,CAAEC,YAAY,yBAuCnC,gCAAMI,EAAA,IAAkBZ,EAAG,6BAAjCa,EAAMC,EAAAC,OACNN,EAAYI,EAAIG,KACtBZ,EAjCD,SAA+BK,GACpC,MAAO,CACLC,KAAM,wBACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KAAKP,EAAK,CAAEQ,eAAgB,CAAEC,YAAY,EAAOC,UAASA,OA6BtDQ,CAAsBR,mCAE/BL,GAvB8Bc,EAuBCC,EAtB9B,CACLT,KAAM,wBACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KAAKP,EAAK,CAAEQ,eAAgB,CAAEC,YAAY,EAAOU,MAAKA,gCAJ5D,IAA+BA,OA4E/B,SAASE,EACdC,GADF,IAAAnB,EAAAC,KAGE,OAAO,SAAOC,EAAUC,GAAQ,OAAAC,EAAA,EAAAJ,OAAA,uFACxBoB,EAAoBjB,IAAWiB,mBAEhBd,YAEhBc,EAAkBC,cAClBC,EAAA,QAAUF,EAAkBD,MAAOA,GAHtC,YAMAjB,EAxDC,SAAgCiB,GACrC,MAAO,CACLX,KAAM,yBACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KAAKP,EAAK,CAAEuB,kBAAmB,CAAEd,YAAY,EAAMa,MAAKA,OAoDtDI,CAAuBJ,qBAElB,gCAAMT,EAAA,IAAkBZ,EAAG,iBACpCqB,MAAMA,kBADHR,EAAMC,EAAAC,OAENQ,EAAeV,EAAIG,KACzBZ,EAjDD,SACLmB,GAEA,MAAO,CACLb,KAAM,2BACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KACFP,EAAK,CACRuB,kBAAmB,CACjBD,MAAOtB,EAAMuB,kBAAkBD,MAC/Bb,YAAY,EACZe,aAAYA,OAsCLG,CAAyBH,mCAElCnB,GA/BiCc,EA+BCS,EA9BjC,CACLjB,KAAM,2BACNC,QAAO,SAACZ,GACN,OAAOO,EAAA,KAAKP,EAAK,CAAEuB,kBAAmB,CAAEd,YAAY,EAAOU,MAAKA,gCAJ/D,IAAkCA,mBCrFlC,IAAMU,EAAYC,OAAAC,EAAA,EAAAD,CAlBzB,SAAyBf,GACvB,MAAO,CACLiB,MAFuBjB,EAAAP,iBAM3B,SAA4BH,GAA5B,IAAAF,EAAAC,KAEI,MAAO,CACL6B,OAAQ,kBAAA1B,EAAA,EAAAJ,OAAA,2BAAAI,EAAA,EAAAH,KAAA,SAAAW,GAAY,SAAAV,EAASH,aASV4B,CCRlB,SAAmBf,OAAEiB,EAAAjB,EAAAiB,OAC1BC,EADiClB,EAAAkB,UAEjC,IAAMxB,EAAauB,EAAMvB,WACnBC,EAAYsB,EAAMtB,UAExB,OAAKA,EAMDwB,EAAA,cAACC,EAAA,EAAS,KACRD,EAAA,oCAAcxB,EAAU0B,YACxBF,EAAA,qGAGAA,EAAA,cAACC,EAAA,EAAS,CAACE,MAAO,CAAEC,QAAU7B,EAAa,GAAM,IAE7CC,EAAU6B,IAAI,SAACC,EAAUC,GACvB,OAAAP,EAAA,cAACC,EAAA,EAAa,CAACO,IAAKD,GAClBP,EAAA,cAACS,EAAA,EAAI,CAACC,GAAI,iCAAiCJ,EAASK,MAClDX,EAAA,cAACC,EAAA,EAAG,KACFD,EAAA,cAACC,EAAA,EAAG,CAACW,GAAG,KAAKN,EAASO,OACtBb,EAAA,cAACC,EAAA,EAAG,CAACW,GAAG,KAAKN,EAASQ,cACtBd,EAAA,cAACC,EAAA,EAAG,CAACW,GAAG,KAAKlD,EAAU4C,IACvBN,EAAA,cAACC,EAAA,EAAG,CAACW,GAAG,KAAKN,EAASzC,QAAQkD,cAlB5Cf,EAAA,2DCjBC,SAAStB,EACdZ,EAIAkD,GAEA,YANA,IAAAlD,MAAA,CACEQ,eAAgB,CAAEC,YAAY,GAC9Bc,kBAAmB,CAAEd,YAAY,KAI/ByC,EAAOtC,QACFsC,EAAOtC,QAAQZ,GAGjBA,cC6ET,SAASmD,EAAiBT,EAAaU,EAAeC,GACpD,OACEnB,EAAA,sBAAMG,MAAO,CAAEiB,UAAW,SACvBZ,EACDR,EAAA,sBAAMG,MAAO,CAAEkB,MAAO,UACnBH,EAAMI,eAAe,QAAS,CAAEnB,MAAO,WAAYgB,SAAU,sBCjE/D,ICvBLI,EDuBWC,EAAe5B,OAAAC,EAAA,EAAAD,CAzB5B,SACEf,EACA4C,OADEpC,EAAAR,EAAAQ,kBACYqC,EAAAD,EAAAnB,SAAAoB,OAERtC,EAAQuC,EAAA,MAAkBD,GAGhC,MAAO,CAAE5B,MAAOT,EAAmBuC,KAFtBC,OAAOzC,EAAMwC,MAAQ,OAKpC,SACEzD,EACAU,GAFF,IAAAZ,EAAAC,KAEgBwD,EAAA7C,EAAAyB,SAAAoB,OAERtC,EAAQuC,EAAA,MAAkBD,GAGhC,cAFOtC,EAAMwC,KAEN,CAAE7B,OAAQ,kBAAA1B,EAAA,EAAAJ,OAAA,2BAAAI,EAAA,EAAAH,KAAA,SAAAW,GAAY,SAAAV,EAASgB,EAAkBC,YAQ9BQ,CDhBrB,SAAsBf,OAAE+C,EAAA/C,EAAA+C,KAAM9B,EAAAjB,EAAAiB,OACnCC,EAD0ClB,EAAAkB,UAE1C,IAAMxB,EAAauB,EAAMvB,WACnBe,EAAeQ,EAAMR,aAE3B,OAAKA,EAMDU,EAAA,cAACC,EAAA,EAAS,KACRD,EAAA,oCAAcV,EAAaY,YAC3BF,EAAA,wFAGAA,EAAA,cAACC,EAAA,EAAS,CAACE,MAAO,CAAEC,QAAU7B,EAAa,GAAM,IAE7Ce,EACGwC,MACc,IAAZF,EAAO,GACRG,KAAKC,IAAW,GAAPJ,EAAWtC,EAAaY,SAElCG,IAAI,SAAC4B,EAAa1B,GACjB,OAAAP,EAAA,cAACC,EAAA,EAAa,CAACO,IAAKD,GAClBP,EAAA,cAACS,EAAA,EAAI,CAACC,GAAI,oCAAoCuB,GAC5CjC,EAAA,cAACC,EAAA,EAAG,KACFD,EAAA,cAACC,EAAA,EAAG,CAACiC,GAAG,cACCD,EAAYE,OAAOC,gBAAgBpC,EAAA,yBAC1CA,EAAA,kCAAcA,EAAA,kCACPiC,EAAYE,OAAO7B,SAAUQ,aAAad,EAAA,oCACxCtC,EAAUuE,EAAYE,OAAO7B,WAExCN,EAAA,cAACC,EAAA,EAAG,CAACiC,GAAG,cACCG,EAAOJ,EAAYE,OAAOG,iBAC9BC,OAAO,cAAcvC,EAAA,yBACxBA,EAAA,sCAAkBA,EAAA,kCACXiC,EAAYE,OAAOxE,QACxBsE,EAAYE,OAAOxE,OAAOmD,aAAad,EAAA,oCAChCtC,EAAUuE,EAAYE,OAAOxE,SAExCqC,EAAA,cAACC,EAAA,EAAG,CAACiC,GAAG,mBACGD,EAAYE,OAAOK,aAAaxC,EAAA,yBACzCA,EAAA,iCAAaA,EAAA,yBACZiB,EACC,YACAgB,EAAYQ,qBAAsBC,SAAUT,EAAYE,OAAOhB,UAC/DnB,EAAA,yBACDiB,EACC,OACAgB,EAAYQ,qBAAsBE,UAAUC,IAAIC,IAAKZ,EAAYE,OAAOhB,UACxEnB,EAAA,yBACDiB,EACC,OACAgB,EAAYQ,qBAAsBE,UAAUG,IAAID,IAAKZ,EAAYE,OAAOhB,UACxEnB,EAAA,yBACDiB,EACC,OACAgB,EAAYQ,qBAAsBE,UAAUI,IAAIF,IAAKZ,EAAYE,OAAOhB,UACxEnB,EAAA,yBACDiB,EACC,eACAgB,EAAYQ,qBAAsBO,WAAYf,EAAYE,OAAOhB,kBAvDrFnB,EAAA,2CGlBAiD,QDIJ,IAAA1B,MAAA,CACEjD,eAAgB,CAAEC,YAAY,GAC9Bc,kBAAmB,CAAEd,YAAY,KAG5BqB,OAAAsD,EAAA,EAAAtD,CAKLlB,EAAS6C,EAAgB3B,OAAAsD,EAAA,EAAAtD,CAAgBuD,EAAA,WEf7CC,EAAA,OACEpD,EAAA,cDKK,WACL,OACEA,EAAA,cAACH,EAAA,EAAQxB,EAAA,KAAK,CAAE4E,MAAKA,IACnBjD,EAAA,cAACqD,EAAA,EAAa,KACZrD,EAAA,cAACsD,EAAA,EAAM,KACLtD,EAAA,cAACuD,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QASdhD,EAT+B,aAUxC,WAAM,OAAAV,EAAA,cAAC2D,EAAA,EAAQ,CAACjD,GAAIA,QATnBV,EAAA,cAACuD,EAAA,EAAK,CAACE,KAAK,aAAaG,UAAWjE,IACpCK,EAAA,cAACuD,EAAA,EAAK,CAACE,KAAK,gBAAgBG,UAAWpC,OAOjD,IAAkBd,GCnBZ,MACJmD,SAASC,eAAe","file":"static/js/main.69f89ed5.chunk.js","sourcesContent":["import { Entity } from '../models/Entity';\n\n/**\n * Returns formated city and state.\n * If city is undefined returns just state.\n * If city is defined formats ${cityName} - ${state}\n */\nexport function cityState(entity?: Entity): string {\n  if (!entity) {\n    return '';\n  } else {\n    const cityName = entity.address.cityName;\n    const state = entity.address.state;\n    if (cityName) {\n      return `${cityName} - ${state}`;\n    } else {\n      return state;\n    }\n  }\n}\n","import * as Redux from 'redux';\nimport * as superagent from 'superagent';\nimport * as _ from 'lodash';\nimport { State } from './State';\nimport { Location } from './models/Entity';\nimport { ThunkAction } from 'redux-thunk';\nimport { Transaction, Header } from './models/Transaction';\n\nexport const URL = 'http://localhost:3000/api';\n\n/**\n * General Action this application\n */\nexport interface Action extends Redux.Action {\n  type: string;\n  reducer(state: State): State;\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchLocationsStart(): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: true } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchLocationsSuccess(locations: Location[]): Action {\n  return {\n    type: 'FetchLocationsSuccess',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, locations } };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching locations.\n */\nexport function fetchLocationsFailure(error: any): Action {\n  return {\n    type: 'FetchLocationsFailure',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, error } };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch locations.\n */\nexport function fetchLocations(\n): ThunkAction<Promise<void>, State, any, Action> {\n  return async (dispatch, getState) => {\n    const locationsCache = getState().locationsCache;\n    if (!locationsCache.isFetching && !locationsCache.locations) {\n      dispatch(fetchLocationsStart());\n      try {\n        const res = await superagent.get(`${URL}/locations`);\n        const locations = res.body as Location[];\n        dispatch(fetchLocationsSuccess(locations));\n      } catch (error) {\n        dispatch(fetchLocationsFailure(error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchTransactionsStart(query: Partial<Header>): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchTransactionsSuccess(\n  transactions: Transaction[]\n): Action {\n  return {\n    type: 'FetchTransactionsSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionsCache: {\n          query: state.transactionsCache.query,\n          isFetching: false,\n          transactions }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transactions.\n */\nexport function fetchTransactionsFailure(error: any): Action {\n  return {\n    type: 'FetchTransactionsFailure',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: false, error } };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transactions.\n */\nexport function fetchTransactions(\n  query: Partial<Header>\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionsCache = getState().transactionsCache;\n    if (\n      !transactionsCache.isFetching &&\n      (\n        !transactionsCache.transactions ||\n        !_.isEqual(transactionsCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionsStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        dispatch(fetchTransactionsSuccess(transactions));\n      } catch (error) {\n        dispatch(fetchTransactionsFailure(error));\n      }\n    }\n  };\n}\n","import { State } from '../State';\nimport * as Component from '../components/Locations';\nimport { Action, fetchLocations } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps({ locationsCache }: State): Partial<Component.Props> {\n  return {\n    cache: locationsCache\n  };\n}\n\nfunction mapDispatchToProps(dispatch: ThunkDispatch<State, any, Action>):\n  Partial<Component.Props> {\n    return {\n      onInit: async () => dispatch(fetchLocations())\n    };\n}\n\n/**\n * Locations component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Locations = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Locations);\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col } from 'reactstrap';\nimport { LocationsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { cityState } from './cityState';\n\nexport type Props = {\n  cache: LocationsCache;\n  onInit(): void;\n};\n\n/**\n * Locations component.\n * Input locations cache.\n * Output onInit() called at the start.\n */\nexport function Locations({ cache, onInit }: Props) {\n  onInit();\n  const isFetching = cache.isFetching;\n  const locations = cache.locations;\n\n  if (!locations) {\n    return (\n      <h2>Carregando...</h2>\n    );\n  } else {\n    return (\n      <Container>\n        <h2>Empresas({locations.length})</h2>\n        <p>\n          Clique sobre uma linha para abrir as transações da empresa desejada.\n        </p>\n        <ListGroup style={{ opacity: (isFetching ? 0.5 : 1) }}>\n          {\n            locations.map((location, index) =>\n              <ListGroupItem key={index}>\n                <Link to={`/transactions?companyLocation=${location.code}`}>\n                  <Row>\n                    <Col md=\"3\">{location.email}</Col>\n                    <Col md=\"3\">{location.federalTaxId}</Col>\n                    <Col md=\"3\">{cityState(location)}</Col>\n                    <Col md=\"3\">{location.address.phone}</Col>\n                  </Row>\n                </Link>\n              </ListGroupItem>\n            )\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n","import { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * Main reducer.\n */\nexport function reducer(\n  state: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false }\n  },\n  action: Action\n): State {\n  if (action.reducer) {\n    return action.reducer(state);\n  }\n\n  return state;\n}\n","import * as React from 'react';\nimport * as moment from 'moment';\nimport { Container, ListGroup, ListGroupItem, Row, Col } from 'reactstrap';\nimport { TransactionsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { cityState } from './cityState';\n\nexport type Props = {\n  page: number;\n  cache: TransactionsCache;\n  onInit(): void;\n};\n\n/**\n * Transactions component.\n * Input transactions cache.\n * Output onInit() Called at the start.\n */\nexport function Transactions({ page, cache, onInit }: Props) {\n  onInit();\n  const isFetching = cache.isFetching;\n  const transactions = cache.transactions;\n\n  if (!transactions) {\n    return (\n      <h2>Carregando...</h2>\n    );\n  } else {\n    return (\n      <Container>\n        <h2>Empresas({transactions.length})</h2>\n        <p>\n          Clique sobre uma linha para abrir a transação desejada.\n        </p>\n        <ListGroup style={{ opacity: (isFetching ? 0.5 : 1) }}>\n          {\n            transactions\n              .slice(\n                (page - 1) * 10,\n                Math.min(page * 10, transactions.length)\n              )\n              .map((transaction, index) =>\n                <ListGroupItem key={index}>\n                  <Link to={`/transactions?companyTransaction=${transaction}`}>\n                    <Row>\n                      <Col lg=\"4\">\n                        TIPO: {transaction.header.transactionType}<br />\n                        <b>EMPRESA</b><br />\n                        CNPJ: {transaction.header.location!.federalTaxId}<br />\n                        CIDADE: {cityState(transaction.header.location!)}\n                      </Col>\n                      <Col lg=\"4\">\n                        DATA: {moment(transaction.header.transactionDate)\n                          .format('DD/MM/YYYY')}<br />\n                        <b>CONTRAPARTE</b><br />\n                        CNPJ: {transaction.header.entity &&\n                          transaction.header.entity.federalTaxId}<br />\n                        CIDADE: {cityState(transaction.header.entity)}\n                      </Col>\n                      <Col lg=\"4\">\n                        CÓDIGO: {transaction.header.documentCode}<br />\n                        <b>RESUMO</b><br />\n                        {keyValueCurrency(\n                          'SUBTOTAL:',\n                          transaction.calculatedTaxSummary!.subtotal, transaction.header.currency\n                        )}<br />\n                        {keyValueCurrency(\n                          'IEC:',\n                          transaction.calculatedTaxSummary!.taxByType.iec.tax, transaction.header.currency\n                        )}<br />\n                        {keyValueCurrency(\n                          'IST:',\n                          transaction.calculatedTaxSummary!.taxByType.ist.tax, transaction.header.currency\n                        )}<br />\n                        {keyValueCurrency(\n                          'ISC:',\n                          transaction.calculatedTaxSummary!.taxByType.isc.tax, transaction.header.currency\n                        )}<br />\n                        {keyValueCurrency(\n                          'TOTAL GERAL:',\n                          transaction.calculatedTaxSummary!.grandTotal, transaction.header.currency\n                        )}\n                      </Col>\n                    </Row>\n                  </Link>\n                </ListGroupItem>\n              )\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nfunction keyValueCurrency(key: string, value: number, currency: string) {\n  return (\n    <span style={{ textAlign: 'left' }}>\n      {key}\n      <span style={{ float: 'right' }}>\n        {value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}\n      </span>\n    </span>\n  );\n}\n","import { State } from '../State';\nimport * as Component from '../components/Transactions';\nimport { Action, fetchTransactions } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport * as queryString from 'query-string';\n\ntype Props = { location: { search: string } };\n\nfunction mapStateToProps(\n  { transactionsCache }: State,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  const page = Number(query.page || '1');\n\n  return { cache: transactionsCache, page };\n}\n\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<State, any, Action>,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  delete query.page;\n\n  return { onInit: async () => dispatch(fetchTransactions(query))};\n}\n\n/**\n * Transactions component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Transactions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Transactions);\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk, { ThunkDispatch } from 'redux-thunk';\nimport { reducer } from './reducer';\nimport { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * configureStore\n * Configure `Store` and returns it.\n */\nexport function configureStore(\n  preloadedState: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false }\n  }\n) {\n  return createStore<\n    State,\n    Action,\n    { dispatch: ThunkDispatch<State, {}, Action> },\n    {}\n  >(reducer, preloadedState, applyMiddleware(reduxThunk));\n}\n","import * as React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Locations } from '../containers/Locations';\nimport { configureStore } from '../configureStore';\nimport { Provider } from 'react-redux';\nimport { Transactions } from '../containers/Transactions';\n\nconst store = configureStore();\n\n/**\n * Main App\n */\nexport function App() {\n  return (\n    <Provider {...{ store }}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={redirect('/locations')} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/transactions\" component={Transactions} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nfunction redirect(to: string) {\n  return () => <Redirect to={to} />;\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}