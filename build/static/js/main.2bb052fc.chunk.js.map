{"version":3,"sources":["components/cityState.tsx","Actions.tsx","containers/Locations.tsx","components/Locations.tsx","reducer.tsx","components/ValueDescription.tsx","components/Entity.tsx","components/TransactionHeader.tsx","containers/Transactions.tsx","configureStore.tsx","components/Transactions.tsx","components/App.tsx","index.tsx"],"names":["cityState","entity","cityName","address","state","URL","fetchLocations","_this","this","dispatch","getState","tslib_es6","locationsCache","isFetching","locations","type","reducer","client","res","_a","sent","body","fetchLocationsSuccess","error","error_1","fetchTransactions","query","transactionsCache","transactions","lodash","fetchTransactionsStart","fetchTransactionsSuccess","error_2","Locations_Locations","Object","es","cache","onInit","react","reactstrap_es","length","style","opacity","map","location","index","key","Link","to","code","md","email","federalTaxId","phone","action","ValueDescription","name","value","_b","currency","textAlign","float","toLocaleString","Entity","title","taxRegime","suframa","TransactionHeader","transaction","header","calculatedTaxSummary","Col_default","a","lg","transactionType","moment","transactionDate","format","documentCode","subtotal","taxByType","iec","tax","ist","isc","grandTotal","preloadedState","Transactions_Transactions","search","query_string","page","Number","start","end","Math","min","slice","store","redux","redux_thunk_es","react_dom","BrowserRouter","Switch","Route","exact","path","render","Redirect","component","document","getElementById"],"mappings":"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","file":"static/js/main.2bb052fc.chunk.js","sourcesContent":["import { Entity } from '../models/Entity';\n\n/**\n * Returns formated city and state of an `Entity`.\n * If city is undefined returns just state.\n * If city is defined formats ${cityName} - ${state}\n */\nexport function cityState(entity?: Entity): string {\n  if (!entity) {\n    return '';\n  } else {\n    const cityName = entity.address.cityName;\n    const state = entity.address.state;\n    if (cityName) {\n      return `${cityName} - ${state}`;\n    } else {\n      return state;\n    }\n  }\n}\n","import * as Redux from 'redux';\nimport * as superagent from 'superagent';\nimport * as _ from 'lodash';\nimport { State } from './State';\nimport { Location } from './models/Entity';\nimport { ThunkAction } from 'redux-thunk';\nimport { Transaction, Header } from './models/Transaction';\n\nexport const URL = 'http://localhost:3000/api';\n\n/**\n * General Action this application\n */\nexport interface Action extends Redux.Action {\n  type: string;\n  reducer(state: State): State;\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchLocationsStart(): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: true } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchLocationsSuccess(locations: Location[]): Action {\n  return {\n    type: 'FetchLocationsSuccess',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, locations } };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching locations.\n */\nexport function fetchLocationsFailure(error: any): Action {\n  return {\n    type: 'FetchLocationsFailure',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, error } };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch locations.\n */\nexport function fetchLocations(\n): ThunkAction<Promise<void>, State, any, Action> {\n  return async (dispatch, getState) => {\n    const locationsCache = getState().locationsCache;\n    if (!locationsCache.isFetching && !locationsCache.locations) {\n      dispatch(fetchLocationsStart());\n      try {\n        const res = await superagent.get(`${URL}/locations`);\n        const locations = res.body as Location[];\n        dispatch(fetchLocationsSuccess(locations));\n      } catch (error) {\n        dispatch(fetchLocationsFailure(error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchTransactionsStart(query: Partial<Header>): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchTransactionsSuccess(\n  transactions: Transaction[]\n): Action {\n  return {\n    type: 'FetchTransactionsSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionsCache: {\n          query: state.transactionsCache.query,\n          isFetching: false,\n          transactions }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transactions.\n */\nexport function fetchTransactionsFailure(error: any): Action {\n  return {\n    type: 'FetchTransactionsFailure',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: false, error } };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transactions.\n */\nexport function fetchTransactions(\n  query: Partial<Header>\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionsCache = getState().transactionsCache;\n    if (\n      !transactionsCache.isFetching &&\n      (\n        !transactionsCache.transactions ||\n        !_.isEqual(transactionsCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionsStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        dispatch(fetchTransactionsSuccess(transactions));\n      } catch (error) {\n        dispatch(fetchTransactionsFailure(error));\n      }\n    }\n  };\n}\n","import { State } from '../State';\nimport * as Component from '../components/Locations';\nimport { Action, fetchLocations } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps({ locationsCache }: State): Partial<Component.Props> {\n  return {\n    cache: locationsCache\n  };\n}\n\nfunction mapDispatchToProps(dispatch: ThunkDispatch<State, any, Action>):\n  Partial<Component.Props> {\n    return {\n      onInit: async () => dispatch(fetchLocations())\n    };\n}\n\n/**\n * Locations component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Locations = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Locations);\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col } from 'reactstrap';\nimport { LocationsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { cityState } from './cityState';\n\nexport type Props = {\n  cache: LocationsCache;\n  onInit(): void;\n};\n\n/**\n * Locations component.\n * Input locations cache.\n * Output onInit() called at the start.\n */\nexport function Locations({ cache, onInit }: Props) {\n  onInit();\n  const isFetching = cache.isFetching;\n  const locations = cache.locations;\n\n  if (!locations) {\n    return (\n      <h2>Carregando...</h2>\n    );\n  } else {\n    return (\n      <Container>\n        <h2>Empresas({locations.length})</h2>\n        <p>\n          Clique sobre uma linha para abrir as transações da empresa desejada.\n        </p>\n        <ListGroup style={{ opacity: (isFetching ? 0.5 : 1) }}>\n          {\n            locations.map((location, index) =>\n              <ListGroupItem key={index}>\n                <Link to={`/transactions?companyLocation=${location.code}`}>\n                  <Row>\n                    <Col md=\"3\">{location.email}</Col>\n                    <Col md=\"3\">{location.federalTaxId}</Col>\n                    <Col md=\"3\">{cityState(location)}</Col>\n                    <Col md=\"3\">{location.address.phone}</Col>\n                  </Row>\n                </Link>\n              </ListGroupItem>\n            )\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n","import { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * Main reducer.\n */\nexport function reducer(\n  state: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false }\n  },\n  action: Action\n): State {\n  if (action.reducer) {\n    return action.reducer(state);\n  }\n\n  return state;\n}\n","import * as React from 'react';\n\nexport type Props = { name: string; value: number; currency: string };\n\n/**\n * React component for displaying a description of a monetary value.\n */\nexport function ValueDescription({ name, value, currency = 'BRL' }: Props) {\n  return (\n      <span style={{ textAlign: 'left' }}>\n        {name}\n        <span style={{ float: 'right' }}>\n          {value.toLocaleString('pt-BR', { style: 'currency', currency })}\n        </span>\n      </span>\n  );\n}\n","import * as React from 'react';\nimport { Entity } from '../models/Entity';\nimport { cityState } from './cityState';\n\nexport type Props = { title: string; entity?: Entity };\n\n/**\n * React component to display an `Entity`.\n * Since `Location` is an `Entity`, it also works for `Location`.\n */\nexport function Entity({ title, entity }: Props) {\n  return(\n    <div>\n      <h4>{title}</h4>\n      {entity &&\n        <div>\n          {entity.federalTaxId}<br />\n          {cityState(entity)}<br />\n          {entity.taxRegime && <span>{entity.taxRegime}<br /></span>}\n          {entity.type && <span>{entity.type}<br /></span>}\n          {entity.suframa && `Suframa: ${entity.suframa}`}\n        </div>\n      }\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Transaction } from '../models/Transaction';\nimport { Row } from 'reactstrap';\nimport Col from 'reactstrap/lib/Col';\nimport * as moment from 'moment';\nimport { ValueDescription } from './ValueDescription';\nimport { Entity } from './Entity';\n\nexport type Props = { transaction: Transaction };\n\n/**\n * React component to display data associated with the entire transaction.\n */\nexport function TransactionHeader({ transaction }: Props) {\n  const header = transaction.header;\n  const currency = header.currency;\n  const calculatedTaxSummary = transaction.calculatedTaxSummary;\n\n  return (\n    <Row>\n      <Col lg=\"4\">\n        <h3>{header.transactionType}</h3>\n        <Entity title=\"Empresa\" entity={header.location} />\n      </Col>\n      <Col lg=\"4\">\n        <p>{moment(header.transactionDate)\n          .format('DD/MM/YYYY')}</p>\n        <Entity title=\"Contraparte\" entity={header.entity} />\n      </Col>\n      <Col lg=\"4\">\n        <p>Código: {header.documentCode}</p>\n        <h4>Resumo</h4>\n        <ValueDescription {...{\n          name: 'Subtotal:',\n          value: calculatedTaxSummary!.subtotal,\n          currency\n        }} /><br />\n        <ValueDescription {...{\n          name: 'IEC:',\n          value: calculatedTaxSummary!.taxByType.iec.tax,\n          currency\n        }} /><br />\n        <ValueDescription {...{\n          name: 'IST:',\n          value: calculatedTaxSummary!.taxByType.ist.tax,\n          currency\n        }} /><br />\n        <ValueDescription {...{\n          name: 'ISC:',\n          value: calculatedTaxSummary!.taxByType.isc.tax,\n          currency\n        }} /><br />\n        <hr />\n        <ValueDescription {...{\n          name: 'TOTAL GERAL:',\n          value: calculatedTaxSummary!.grandTotal,\n          currency\n        }} />\n      </Col>\n    </Row>\n  );\n}\n","import { State } from '../State';\nimport * as Component from '../components/Transactions';\nimport { Action, fetchTransactions } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport * as queryString from 'query-string';\n\ntype Props = { location: { search: string } };\n\nfunction mapStateToProps(\n  { transactionsCache }: State,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  const page = Number(query.page || '1');\n\n  return { cache: transactionsCache, page };\n}\n\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<State, any, Action>,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  delete query.page;\n\n  return { onInit: async () => dispatch(fetchTransactions(query))};\n}\n\n/**\n * Transactions component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Transactions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Transactions);\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk, { ThunkDispatch } from 'redux-thunk';\nimport { reducer } from './reducer';\nimport { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * configureStore\n * Configure `Store` and returns it.\n */\nexport function configureStore(\n  preloadedState: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false }\n  }\n) {\n  return createStore<\n    State,\n    Action,\n    { dispatch: ThunkDispatch<State, {}, Action> },\n    {}\n  >(reducer, preloadedState, applyMiddleware(reduxThunk));\n}\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { TransactionsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { TransactionHeader } from './TransactionHeader';\n\nexport type Props = {\n  page: number;\n  cache: TransactionsCache;\n  onInit(): void;\n};\n\n/**\n * Transactions component.\n * Input transactions cache.\n * Output onInit() Called at the start.\n */\nexport function Transactions({ page, cache, onInit }: Props) {\n  onInit();\n  const isFetching = cache.isFetching;\n  const transactions = cache.transactions;\n\n  if (!transactions) {\n    return (\n      <h2>Carregando...</h2>\n    );\n  } else {\n    const start = (page - 1) * 10;\n    const end = Math.min(page * 10, transactions.length);\n\n    return (\n      <Container>\n        <h2>Transações {start + 1} a {end} de {transactions.length}</h2>\n        <p>\n          Clique sobre uma linha para abrir a transação desejada.\n        </p>\n        <ListGroup style={{ opacity: (isFetching ? 0.5 : 1) }}>\n          {\n            transactions.slice(start, end)\n              .map((transaction, index) =>\n                <ListGroupItem key={index}>\n                  <Link to={`/transactions?companyTransaction=${transaction}`}>\n                    <TransactionHeader {...{ transaction }} />\n                  </Link>\n                </ListGroupItem>\n              )\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Locations } from '../containers/Locations';\nimport { configureStore } from '../configureStore';\nimport { Provider } from 'react-redux';\nimport { Transactions } from '../containers/Transactions';\n\nconst store = configureStore();\n\n/**\n * Main App\n */\nexport function App() {\n  return (\n    <Provider {...{ store }}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={redirect('/locations')} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/transactions\" component={Transactions} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nfunction redirect(to: string) {\n  return () => <Redirect to={to} />;\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}