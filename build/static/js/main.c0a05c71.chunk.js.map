{"version":3,"sources":["components/cityState.tsx","Actions.tsx","containers/Locations.tsx","components/Locations.tsx","reducer.tsx","components/ValueDescription.tsx","components/Entity.tsx","components/TransactionHeader.tsx","components/Transactions.tsx","containers/Transactions.tsx","components/TaxDetail.tsx","components/Line.tsx","containers/Transaction.tsx","configureStore.tsx","components/Transaction.tsx","components/App.tsx","index.tsx"],"names":["cityState","entity","cityName","address","state","URL","fetchLocations","_this","this","dispatch","getState","tslib_es6","locationsCache","isFetching","locations","error","type","reducer","client","res","_a","sent","body","fetchLocationsSuccess","error_1","transactionCache","query","fetchTransactions","transactionsCache","transactions","lodash","fetchTransactionsStart","fetchTransactionsSuccess","error_2","fetchTransaction","transaction","fetchTransactionStart","length","Error","companyLocation","transactionDate","documentCode","error_3","Locations_Locations","Object","es","onInit","react","reactstrap_es","active","color","message","style","opacity","map","location","index","key","Link","to","code","md","federalTaxId","email","phone","action","ValueDescription","name","value","_b","currency","float","toLocaleString","Entity","title","taxRegime","suframa","TransactionHeader","header","calculatedTaxSummary","Col_default","a","lg","transactionType","moment","format","subtotal","taxByType","iec","tax","ist","isc","grandTotal","Transactions_query","PAGE_SIZE","urlToPage","page","toString","Transactions_Transactions","search","query_string","Number","Math","min","slice","justifyContent","disabled","className","Array","from","ceil","e","TaxDetail","taxDetail","scope","taxType","jurisdictionName","scenario","align","calcBase","rate","maximumFractionDigits","fact","Line","line","item","description","productType","numberOfItems","itemPrice","calculatedTax","CST","lineAmount","otherCostAmount","lineDiscount","responsive","taxDetails","preloadedState","Transaction_Transaction","lines","store","redux","redux_thunk_es","react_dom","BrowserRouter","Switch","Route","exact","path","render","url","Redirect","component","document","getElementById"],"mappings":"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","file":"static/js/main.c0a05c71.chunk.js","sourcesContent":["import { Entity } from '../models/Entity';\n\n/**\n * Returns formated city and state of an `Entity`.\n * If city is undefined returns just state.\n * If city is defined formats ${cityName} - ${state}\n */\nexport function cityState(entity?: Entity): string {\n  if (!entity) {\n    return '';\n  } else {\n    const cityName = entity.address.cityName;\n    const state = entity.address.state;\n    if (cityName) {\n      return `${cityName} - ${state}`;\n    } else {\n      return state;\n    }\n  }\n}\n","import * as Redux from 'redux';\nimport * as superagent from 'superagent';\nimport * as _ from 'lodash';\nimport { State } from './State';\nimport { Location } from './models/Entity';\nimport { ThunkAction } from 'redux-thunk';\nimport { Transaction, Header, TransactionKey } from './models/Transaction';\n\nexport const URL = 'http://localhost:3000/api';\n\n/**\n * General Action this application\n */\nexport interface Action extends Redux.Action {\n  type: string;\n  reducer(state: State): State;\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchLocationsStart(): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: true } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchLocationsSuccess(locations: Location[]): Action {\n  return {\n    type: 'FetchLocationsSuccess',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, locations } };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching locations.\n */\nexport function fetchLocationsFailure(error: Error): Action {\n  return {\n    type: 'FetchLocationsFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch locations.\n */\nexport function fetchLocations(\n): ThunkAction<Promise<void>, State, any, Action> {\n  return async (dispatch, getState) => {\n    const locationsCache = getState().locationsCache;\n    if (\n      !locationsCache.isFetching &&\n      !locationsCache.locations &&\n      !locationsCache.error\n    ) {\n      dispatch(fetchLocationsStart());\n      try {\n        const res = await superagent.get(`${URL}/locations`);\n        const locations = res.body as Location[];\n        dispatch(fetchLocationsSuccess(locations));\n      } catch (error) {\n        dispatch(fetchLocationsFailure(error as Error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchTransactionsStart(query: Partial<Header>): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchTransactionsSuccess(\n  transactions: Transaction[]\n): Action {\n  return {\n    type: 'FetchTransactionsSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionsCache: {\n          query: state.transactionsCache.query,\n          isFetching: false,\n          transactions }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transactions.\n */\nexport function fetchTransactionsFailure(error: Error): Action {\n  return {\n    type: 'FetchTransactionsFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transactions.\n */\nexport function fetchTransactions(\n  query: Partial<Header>\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionsCache = getState().transactionsCache;\n    if (\n      !transactionsCache.isFetching &&\n      (\n        (!transactionsCache.transactions && !transactionsCache.error) ||\n        !_.isEqual(transactionsCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionsStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        dispatch(fetchTransactionsSuccess(transactions));\n      } catch (error) {\n        dispatch(fetchTransactionsFailure(error as Error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching a Transaction.\n */\nexport function fetchTransactionStart(query: TransactionKey): Action {\n  return {\n    type: 'FetchTransactionStart',\n    reducer(state) {\n      return { ...state, transactionCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transaction.\n */\nexport function fetchTransactionSuccess(\n  transaction: Transaction\n): Action {\n  return {\n    type: 'FetchTransactionSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          transaction\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transaction.\n */\nexport function fetchTransactionFailure(error: Error): Action {\n  return {\n    type: 'FetchTransactionFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transaction.\n */\nexport function fetchTransaction(\n  query: TransactionKey\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionCache = getState().transactionCache;\n    if (\n      !transactionCache.isFetching &&\n      (\n        (!transactionCache.transaction && !transactionCache.error) ||\n        !_.isEqual(transactionCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        if (transactions.length === 0) {\n          throw new Error(\n            `Transação não encontrada com\ncompanyLocation = '${query.companyLocation}',\ntransactionDate = '${query.transactionDate}',\ndocumentCode = '${query.documentCode}'.`\n          );\n        }\n        dispatch(fetchTransactionSuccess(transactions[0]));\n      } catch (error) {\n        dispatch(fetchTransactionFailure(error as Error));\n      }\n    }\n  };\n}\n","import { State } from '../State';\nimport * as Component from '../components/Locations';\nimport { Action, fetchLocations } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps({ locationsCache }: State): Partial<Component.Props> {\n  return { locationsCache };\n}\n\nfunction mapDispatchToProps(dispatch: ThunkDispatch<State, any, Action>):\n  Partial<Component.Props> {\n    return {\n      onInit: async () => dispatch(fetchLocations())\n    };\n}\n\n/**\n * Locations container.\n */\nexport const Locations = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Locations);\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { LocationsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { cityState } from './cityState';\n\nexport type Props = {\n  locationsCache: LocationsCache;\n  onInit(): void;\n};\n\n/**\n * Locations component.\n * Input locations cache.\n * Output onInit() called at the start.\n */\nexport function Locations({ locationsCache, onInit }: Props) {\n  onInit();\n  const locations = locationsCache.locations;\n  const error = locationsCache.error;\n\n  return (\n    <Container>\n      <Breadcrumb>\n        <BreadcrumbItem active>Empresas</BreadcrumbItem>\n      </Breadcrumb>\n      {\n        !error && !locations  &&\n        <Alert color=\"primary\">\n          <h2>Carregando...</h2>;\n          </Alert>\n      }\n      {\n        error &&\n        <Alert color=\"danger\">\n          <h2>Erro</h2>\n          <p>{error.message}</p>\n        </Alert>\n      }\n      {\n        locations &&\n        <div>\n          <h2>Empresas({locations.length})</h2>\n          <p>\n            Clique sobre uma linha para abrir as transações da empresa desejada.\n            </p>\n          <ListGroup style={{\n            opacity: (locationsCache.isFetching ? 0.5 : 1)\n          }}>\n            {\n              locations.map((location, index) =>\n                <ListGroupItem key={index}>\n                  <Link to={`/transactions?companyLocation=${location.code}`}>\n                    <Row>\n                      <Col md=\"3\">{location.federalTaxId}</Col>\n                      <Col md=\"3\">{cityState(location)}</Col>\n                      <Col md=\"3\">{location.email}</Col>\n                      <Col md=\"3\">{location.address.phone}</Col>\n                    </Row>\n                  </Link>\n                </ListGroupItem>\n              )\n            }\n          </ListGroup>\n        </div>\n      }\n    </Container>\n  );\n}\n","import { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * Main reducer.\n */\nexport function reducer(\n  state: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false },\n    transactionCache: { isFetching: false }\n  },\n  action: Action\n): State {\n  if (action.reducer) {\n    return action.reducer(state);\n  }\n\n  return state;\n}\n","import * as React from 'react';\n\nexport type Props = { name: string; value: number; currency: string };\n\n/**\n * React component for displaying a description of a monetary value.\n */\nexport function ValueDescription({ name, value, currency = 'BRL' }: Props) {\n  return (\n    <div>\n      <span style={{ float: 'left' }}><b>{name}</b></span>\n      <span style={{ float: 'right' }}>\n        {value.toLocaleString('pt-BR', { style: 'currency', currency })}\n      </span>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Entity } from '../models/Entity';\nimport { cityState } from './cityState';\n\nexport type Props = { title: string; entity?: Entity };\n\n/**\n * React component to display an `Entity`.\n * Since `Location` is an `Entity`, it also works for `Location`.\n */\nexport function Entity({ title, entity }: Props) {\n  return(\n    <div>\n      <h4>{title}</h4>\n      {entity &&\n        <div>\n          {entity.federalTaxId}<br />\n          {cityState(entity)}<br />\n          {entity.taxRegime && <span>{entity.taxRegime}<br /></span>}\n          {entity.type && <span>{entity.type}<br /></span>}\n          {entity.suframa && `Suframa: ${entity.suframa}`}\n        </div>\n      }\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Transaction } from '../models/Transaction';\nimport { Row } from 'reactstrap';\nimport Col from 'reactstrap/lib/Col';\nimport * as moment from 'moment';\nimport { ValueDescription } from './ValueDescription';\nimport { Entity } from './Entity';\n\nexport type Props = { transaction: Transaction };\n\n/**\n * React component to display data associated with the entire transaction.\n */\nexport function TransactionHeader({ transaction }: Props) {\n  const header = transaction.header;\n  const currency = header.currency;\n  const calculatedTaxSummary = transaction.calculatedTaxSummary;\n\n  return (\n    <div>\n      <Row>\n        <Col lg=\"4\">\n          <h3>{header.transactionType}</h3>\n        </Col>\n        <Col lg=\"4\">\n          Data: {moment(header.transactionDate)\n            .format('DD/MM/YYYY')}\n        </Col>\n        <Col lg=\"4\">\n          Código: {header.documentCode}\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"4\">\n          <Entity title=\"Empresa\" entity={header.location} />\n        </Col>\n        <Col lg=\"4\">\n          <Entity title=\"Contraparte\" entity={header.entity} />\n        </Col>\n        <Col lg=\"4\">\n          <h4>Resumo</h4>\n          <ValueDescription {...{\n            name: 'Subtotal:',\n            value: calculatedTaxSummary!.subtotal,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'IEC:',\n            value: calculatedTaxSummary!.taxByType.iec.tax,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'IST:',\n            value: calculatedTaxSummary!.taxByType.ist.tax,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'ISC:',\n            value: calculatedTaxSummary!.taxByType.isc.tax,\n            currency\n          }} /><br />\n          <hr />\n          <ValueDescription {...{\n            name: 'TOTAL GERAL:',\n            value: calculatedTaxSummary!.grandTotal,\n            currency\n          }} />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Pagination, PaginationItem, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport * as queryString from 'query-string';\nimport { TransactionsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { TransactionHeader } from './TransactionHeader';\n\nexport const PAGE_SIZE = 10;\n\nexport type Props = {\n  page: number;\n  transactionsCache: TransactionsCache;\n  onInit(): void;\n};\n\nlet query: string;\n\n/**\n * Transactions component.\n * Input transactions cache.\n * Output onInit() Called at the start.\n */\nexport function Transactions({ page, transactionsCache, onInit }: Props) {\n  onInit();\n  const transactions = transactionsCache.transactions;\n  const error = transactionsCache.error;\n  query = queryString.stringify(transactionsCache.query!);\n\n  return (\n    <Container>\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <Link to=\"/locations\">Empresas</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>Transações</BreadcrumbItem>\n      </Breadcrumb>\n      {\n        !error && !transactions &&\n        <Alert color=\"primary\">\n          <h2>Carregando...</h2>;\n        </Alert>\n      }\n      {\n        error &&\n        <Alert color=\"danger\">\n          <h2>Erro</h2>\n          <p>{error.message}</p>\n        </Alert>\n      }\n      {\n        transactions &&\n        <div>\n          <h2>\n            Transações {(page - 1) * PAGE_SIZE + 1} a&nbsp;\n            {Math.min(page * PAGE_SIZE, transactions.length)} de&nbsp;\n            {transactions.length}\n          </h2>\n          <p>\n            Clique sobre uma linha para abrir os detalhes da transação.\n          </p>\n          <ListGroup style={{\n            opacity: (transactionsCache.isFetching ? 0.5 : 1)\n          }}>\n            {\n              transactions.slice(\n                (page - 1) * PAGE_SIZE,\n                Math.min(page * PAGE_SIZE, transactions.length)\n              )\n                .map((transaction, index) =>\n                  <ListGroupItem key={index}>\n                    <Link to={\n                      `/transaction\\\n?companyLocation=${transaction.header.companyLocation}\\\n&transactionDate=${transaction.header.transactionDate}\\\n&documentCode=${transaction.header.documentCode}`\n                    }>\n                      <TransactionHeader {...{ transaction }} />\n                    </Link>\n                  </ListGroupItem>\n                )\n            }\n          </ListGroup>\n          <p></p>\n          <Pagination style={{ justifyContent: 'center' }}>\n            <PaginationItem disabled={page <= 1}>\n              <Link className=\"page-link\" to={urlToPage(page - 1)}>&laquo;</Link>\n            </PaginationItem>\n            {Array.from({ length: Math.ceil(transactions.length / PAGE_SIZE) })\n              .map((e, index) =>\n                <PaginationItem active={page === index + 1} key={index}>\n                  <Link className=\"page-link\" to={urlToPage(index + 1)}>\n                    {index + 1}\n                  </Link>\n                </PaginationItem>)}\n            <PaginationItem disabled={\n              page >= Math.ceil(transactions.length / PAGE_SIZE)\n            }>\n              <Link className=\"page-link\" to={urlToPage(page + 1)}>&raquo;</Link>\n            </PaginationItem>\n          </Pagination>\n        </div>\n      }\n    </Container>\n  );\n}\n\nfunction urlToPage(page: number) {\n  return `/transactions?${query}&page=${page.toString()}`;\n}\n","import { State } from '../State';\nimport * as Component from '../components/Transactions';\nimport { Action, fetchTransactions } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport * as queryString from 'query-string';\n\ntype Props = { location: { search: string } };\n\nfunction mapStateToProps(\n  { transactionsCache }: State,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  const page = Number(query.page || '1');\n\n  return { transactionsCache, page };\n}\n\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<State, any, Action>,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  delete query.page;\n\n  return { onInit: async () => dispatch(fetchTransactions(query))};\n}\n\n/**\n * Transactions container.\n * Props = { location: { search: string } }\n */\nexport const Transactions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Transactions);\n","import * as React from 'react';\nimport { Detail } from '../models/Transaction';\n\nexport type Props = { taxDetail: Detail; currency: string };\n\n/**\n * React component to display details of a tax.\n */\nexport function TaxDetail({ taxDetail, currency = 'BRL' }: Props) {\n  return (\n    <tr>\n      <th scope=\"row\">{taxDetail.taxType}</th>\n      <td>{taxDetail.jurisdictionName}</td>\n      <td>{taxDetail.scenario}</td>\n      <td align=\"right\">{taxDetail.calcBase.toLocaleString(\n        'pt-BR',\n        { style: 'currency', currency }\n      )}</td>\n      <td align=\"right\">{`${(taxDetail.rate * 100).toLocaleString(\n        'pt-BR',\n        {maximumFractionDigits: 2}\n      )}%`}</td>\n      <td align=\"right\">{`${((taxDetail.fact || 0) * 100).toLocaleString(\n        'pt-BR',\n        {maximumFractionDigits: 2}\n      )}%`}</td>\n      <td align=\"right\">{\n        taxDetail.tax.toLocaleString('pt-BR', { style: 'currency', currency })\n      }</td>\n    </tr>\n  );\n}\n","import * as React from 'react';\nimport { Line } from '../models/Transaction';\nimport { Row, Col, Table } from 'reactstrap';\nimport { ValueDescription } from './ValueDescription';\nimport { TaxDetail } from './TaxDetail';\n\nexport type Props = { line: Line; currency: string };\n\n/**\n * React component to display a `Transaction` `Line`.\n */\nexport function Line({ line, currency = 'BRL' }: Props) {\n  const item = line.item!;\n\n  return (\n    <div>\n      <Row>\n        <Col lg=\"8\">\n          <b>Código do produto: </b>{item.code}<br />\n          {(item.description) && <span>{item.description}<br /></span>}\n          {item.productType}<br />\n          {(line.numberOfItems) &&\n            <span>\n              <b>Quantidade: </b>{line.numberOfItems}<br />\n            </span>}\n          <b>Preço unitário: </b>{line.itemPrice.toLocaleString(\n            'pt-BR',\n            { style: 'currency', currency }\n          )}<br />\n          <b>CST: </b>{line.calculatedTax!.CST}\n        </Col>\n        <Col lg=\"4\">\n          <ValueDescription {...{\n            name: 'Montante:',\n            value: line.lineAmount ||\n              (line.numberOfItems || 1) * line.itemPrice,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'Outros custos:',\n            value: line.otherCostAmount || 0,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'Desconto:',\n            value: -(line.lineDiscount || 0),\n            currency\n          }} /><br />\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"12\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Tipo</th>\n                <th>Jurisdição</th>\n                <th>Cenário</th>\n                <th>Base de cálculo</th>\n                <th>Alíquota</th>\n                <th>Redução</th>\n                <th>Imposto</th>\n              </tr>\n            </thead>\n            <tbody>\n              <TaxDetail {...{\n                taxDetail: line.calculatedTax!.taxDetails.iec,\n                currency\n              }} />\n              <TaxDetail {...{\n                taxDetail: line.calculatedTax!.taxDetails.ist,\n                currency\n              }} />\n              <TaxDetail {...{\n                taxDetail: line.calculatedTax!.taxDetails.isc,\n                currency\n              }} />\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import { State } from '../State';\nimport * as Component from '../components/Transaction';\nimport { Action, fetchTransaction } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport * as queryString from 'query-string';\nimport { TransactionKey } from '../models/Transaction';\n\ntype Props = { location: { search: string } };\n\nfunction mapStateToProps({ transactionCache }: State): Partial<Component.Props> {\n  return { transactionCache };\n}\n\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<State, any, Action>,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search) as unknown as TransactionKey;\n\n  return {\n    onInit: async () => dispatch(fetchTransaction(query))\n  };\n}\n\n/**\n * Transaction container.\n * Props = { location: { search: string } }\n */\nexport const Transaction = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Transaction);\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk, { ThunkDispatch } from 'redux-thunk';\nimport { reducer } from './reducer';\nimport { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * configureStore\n * Configure `Store` and returns it.\n */\nexport function configureStore(\n  preloadedState: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false },\n    transactionCache: { isFetching: false }\n  }\n) {\n  return createStore<\n    State,\n    Action,\n    { dispatch: ThunkDispatch<State, {}, Action> },\n    {}\n  >(reducer, preloadedState, applyMiddleware(reduxThunk));\n}\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { TransactionCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { TransactionHeader } from './TransactionHeader';\nimport { Line } from './Line';\n\nexport type Props = {\n  transactionCache: TransactionCache;\n  onInit(): void;\n};\n\n/**\n * Transaction component.\n * Input transaction cache.\n * Output onInit() called at the start.\n */\nexport function Transaction({ transactionCache, onInit }: Props) {\n  onInit();\n  const transaction = transactionCache.transaction;\n  const error = transactionCache.error;\n\n  return (\n    <Container>\n      {\n        !error && !transaction &&\n        <Alert color=\"primary\">\n          <h2>Carregando...</h2>;\n        </Alert>\n      }\n      {\n        error &&\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/locations\">Empresas</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>Transações</BreadcrumbItem>\n            <BreadcrumbItem>Detalhes da transação</BreadcrumbItem>\n          </Breadcrumb>\n          <Alert color=\"danger\">\n            <h2>Erro</h2>\n            <p>{error.message}</p>\n          </Alert>\n        </div>\n      }\n      {\n        transaction &&\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/locations\">Empresas</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to={\n                `/transactions?companyLocation=${\n                transactionCache.query!.companyLocation\n                }`\n              }>Transações</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>Detalhes da transação</BreadcrumbItem>\n          </Breadcrumb>\n          <h2>Detalhes da transação</h2>\n          <ListGroup style={{\n            opacity: (transactionCache.isFetching ? 0.5 : 1)\n          }}>\n            <ListGroupItem>\n              <TransactionHeader {...{ transaction }} />\n            </ListGroupItem>\n            {\n              transaction.lines.map((line, index) =>\n                <ListGroupItem key={index}>\n                  <Line {...{ line, currency: transaction.header.currency }} />\n                </ListGroupItem>\n              )\n            }\n          </ListGroup>\n        </div>\n      }\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Locations } from '../containers/Locations';\nimport { configureStore } from '../configureStore';\nimport { Provider } from 'react-redux';\nimport { Transactions } from '../containers/Transactions';\nimport { Transaction } from '../containers/Transaction';\n\nconst store = configureStore();\n\n/**\n * Main App\n */\nexport function App() {\n  return (\n    <Provider {...{ store }}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={redirectTo('/locations')} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/transactions\" component={Transactions} />\n          <Route path=\"/transaction\" component={Transaction} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nfunction redirectTo(url: string) {\n  return () => <Redirect to={url} />;\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}