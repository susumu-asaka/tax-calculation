{"version":3,"sources":["components/cityState.tsx","Actions.tsx","containers/Locations.tsx","components/Locations.tsx","reducer.tsx","components/Transactions.tsx","components/ValueDescription.tsx","components/Entity.tsx","components/TransactionHeader.tsx","containers/Transactions.tsx","configureStore.tsx","components/App.tsx","index.tsx"],"names":["cityState","entity","cityName","address","state","URL","fetchLocations","_this","this","dispatch","getState","tslib_es6","locationsCache","isFetching","locations","error","type","reducer","client","res","_a","sent","body","fetchLocationsSuccess","error_1","transactionCache","query","fetchTransactions","transactionsCache","transactions","lodash","fetchTransactionsStart","fetchTransactionsSuccess","error_2","Locations_Locations","Object","es","cache","onInit","react","reactstrap_es","active","length","style","opacity","map","location","index","key","Link","to","code","md","email","federalTaxId","phone","color","message","action","Transactions_query","ValueDescription","name","value","_b","currency","float","toLocaleString","Entity","title","taxRegime","suframa","TransactionHeader","transaction","header","calculatedTaxSummary","Col_default","a","lg","transactionType","moment","transactionDate","format","documentCode","subtotal","taxByType","iec","tax","ist","isc","grandTotal","urlToPage","page","toString","preloadedState","Transactions_Transactions","search","query_string","Number","start","end","Math","min","pagesCount","ceil","slice","companyLocation","justifyContent","disabled","className","Array","from","e","store","redux","redux_thunk_es","react_dom","BrowserRouter","Switch","Route","exact","path","render","Redirect","component","document","getElementById"],"mappings":"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","file":"static/js/main.51457041.chunk.js","sourcesContent":["import { Entity } from '../models/Entity';\n\n/**\n * Returns formated city and state of an `Entity`.\n * If city is undefined returns just state.\n * If city is defined formats ${cityName} - ${state}\n */\nexport function cityState(entity?: Entity): string {\n  if (!entity) {\n    return '';\n  } else {\n    const cityName = entity.address.cityName;\n    const state = entity.address.state;\n    if (cityName) {\n      return `${cityName} - ${state}`;\n    } else {\n      return state;\n    }\n  }\n}\n","import * as Redux from 'redux';\nimport * as superagent from 'superagent';\nimport * as _ from 'lodash';\nimport { State } from './State';\nimport { Location } from './models/Entity';\nimport { ThunkAction } from 'redux-thunk';\nimport { Transaction, Header, TransactionKey } from './models/Transaction';\n\nexport const URL = 'http://localhost:3000/api';\n\n/**\n * General Action this application\n */\nexport interface Action extends Redux.Action {\n  type: string;\n  reducer(state: State): State;\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchLocationsStart(): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: true } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchLocationsSuccess(locations: Location[]): Action {\n  return {\n    type: 'FetchLocationsSuccess',\n    reducer(state) {\n      return { ...state, locationsCache: { isFetching: false, locations } };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching locations.\n */\nexport function fetchLocationsFailure(error: Error): Action {\n  return {\n    type: 'FetchLocationsFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch locations.\n */\nexport function fetchLocations(\n): ThunkAction<Promise<void>, State, any, Action> {\n  return async (dispatch, getState) => {\n    const locationsCache = getState().locationsCache;\n    if (\n      !locationsCache.isFetching &&\n      !locationsCache.locations &&\n      !locationsCache.error\n    ) {\n      dispatch(fetchLocationsStart());\n      try {\n        const res = await superagent.get(`${URL}/locations`);\n        const locations = res.body as Location[];\n        dispatch(fetchLocationsSuccess(locations));\n      } catch (error) {\n        dispatch(fetchLocationsFailure(error as Error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching Transactions.\n */\nexport function fetchTransactionsStart(query: Partial<Header>): Action {\n  return {\n    type: 'FetchTransactionsStart',\n    reducer(state) {\n      return { ...state, transactionsCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transactions.\n */\nexport function fetchTransactionsSuccess(\n  transactions: Transaction[]\n): Action {\n  return {\n    type: 'FetchTransactionsSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionsCache: {\n          query: state.transactionsCache.query,\n          isFetching: false,\n          transactions }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transactions.\n */\nexport function fetchTransactionsFailure(error: Error): Action {\n  return {\n    type: 'FetchTransactionsFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transactions.\n */\nexport function fetchTransactions(\n  query: Partial<Header>\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionsCache = getState().transactionsCache;\n    if (\n      !transactionsCache.isFetching &&\n      (\n        (!transactionsCache.transactions && !transactionsCache.error) ||\n        !_.isEqual(transactionsCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionsStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        dispatch(fetchTransactionsSuccess(transactions));\n      } catch (error) {\n        dispatch(fetchTransactionsFailure(error as Error));\n      }\n    }\n  };\n}\n\n/**\n * Returns `Action` to start fetching a Transaction.\n */\nexport function fetchTransactionStart(query: TransactionKey): Action {\n  return {\n    type: 'FetchTransactionStart',\n    reducer(state) {\n      return { ...state, transactionCache: { isFetching: true, query } };\n    }\n  };\n}\n\n/**\n * Return `Action` after successfully fetching Transaction.\n */\nexport function fetchTransactionSuccess(\n  transaction: Transaction\n): Action {\n  return {\n    type: 'FetchTransactionSuccess',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          transaction\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `Action` after failing to fetching Transaction.\n */\nexport function fetchTransactionFailure(error: Error): Action {\n  return {\n    type: 'FetchTransactionFailure',\n    reducer(state) {\n      return {\n        ...state,\n        transactionCache: {\n          query: state.transactionCache.query,\n          isFetching: false,\n          error\n        }\n      };\n    }\n  };\n}\n\n/**\n * Return `ThunkAction` to fetch Transaction.\n */\nexport function fetchTransaction(\n  query: TransactionKey\n): ThunkAction<Promise<void>, State, null, Action> {\n  return async (dispatch, getState) => {\n    const transactionCache = getState().transactionCache;\n    if (\n      !transactionCache.isFetching &&\n      (\n        (!transactionCache.transaction && !transactionCache.error) ||\n        !_.isEqual(transactionCache.query, query)\n      )\n    ) {\n      dispatch(fetchTransactionStart(query));\n      try {\n        const res = await superagent.get(`${URL}/transactions`)\n          .query(query);\n        const transactions = res.body as Transaction[];\n        if (transactions.length === 0) {\n          throw new Error(\n            `Transação não encontrada com\ncompanyLocation = ${query.companyLocation}\ntransactionDate = ${query.transactionDate}\ndocumentCode = ${query.documentCode}`\n          );\n        }\n        dispatch(fetchTransactionSuccess(transactions[0]));\n      } catch (error) {\n        dispatch(fetchTransactionFailure(error as Error));\n      }\n    }\n  };\n}\n","import { State } from '../State';\nimport * as Component from '../components/Locations';\nimport { Action, fetchLocations } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps({ locationsCache }: State): Partial<Component.Props> {\n  return {\n    cache: locationsCache\n  };\n}\n\nfunction mapDispatchToProps(dispatch: ThunkDispatch<State, any, Action>):\n  Partial<Component.Props> {\n    return {\n      onInit: async () => dispatch(fetchLocations())\n    };\n}\n\n/**\n * Locations component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Locations = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Locations);\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { LocationsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { cityState } from './cityState';\n\nexport type Props = {\n  cache: LocationsCache;\n  onInit(): void;\n};\n\n/**\n * Locations component.\n * Input locations cache.\n * Output onInit() called at the start.\n */\nexport function Locations({ cache, onInit }: Props) {\n  onInit();\n  const locations = cache.locations;\n  const error = cache.error;\n\n  if (locations) {\n    return (\n      <Container>\n        <Breadcrumb>\n          <BreadcrumbItem active>Empresas</BreadcrumbItem>\n        </Breadcrumb>\n        <h2>Empresas({locations.length})</h2>\n        <p>\n          Clique sobre uma linha para abrir as transações da empresa desejada.\n        </p>\n        <ListGroup style={{ opacity: (cache.isFetching ? 0.5 : 1) }}>\n          {\n            locations.map((location, index) =>\n              <ListGroupItem key={index}>\n                <Link to={`/transactions?companyLocation=${location.code}`}>\n                  <Row>\n                    <Col md=\"3\">{location.email}</Col>\n                    <Col md=\"3\">{location.federalTaxId}</Col>\n                    <Col md=\"3\">{cityState(location)}</Col>\n                    <Col md=\"3\">{location.address.phone}</Col>\n                  </Row>\n                </Link>\n              </ListGroupItem>\n            )\n          }\n        </ListGroup>\n      </Container>\n    );\n  } else if (error) {\n    return (\n      <Alert color=\"danger\">\n        <h2>Erro</h2>\n        <p>{error.message}</p>\n      </Alert>\n    );\n  } else {\n    return (\n      <Alert color=\"primary\">\n        <h2>Carregando...</h2>;\n      </Alert>\n    );\n  }\n}\n","import { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * Main reducer.\n */\nexport function reducer(\n  state: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false },\n    transactionCache: { isFetching: false }\n  },\n  action: Action\n): State {\n  if (action.reducer) {\n    return action.reducer(state);\n  }\n\n  return state;\n}\n","import * as React from 'react';\nimport { Container, ListGroup, ListGroupItem, Pagination, PaginationItem, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport * as queryString from 'query-string';\nimport { TransactionsCache } from '../State';\nimport { Link } from 'react-router-dom';\nimport { TransactionHeader } from './TransactionHeader';\n\nexport type Props = {\n  page: number;\n  cache: TransactionsCache;\n  onInit(): void;\n};\n\nlet query: string;\n\n/**\n * Transactions component.\n * Input transactions cache.\n * Output onInit() Called at the start.\n */\nexport function Transactions({ page, cache, onInit }: Props) {\n  onInit();\n  const transactions = cache.transactions;\n  const error = cache.error;\n  query = queryString.stringify(cache.query!);\n\n  if (transactions) {\n    const PAGE_SIZE = 10;\n    const length = transactions.length;\n    const start = (page - 1) * PAGE_SIZE;\n    const end = Math.min(page * PAGE_SIZE, length);\n    const pagesCount = Math.ceil(length / PAGE_SIZE);\n\n    return (\n      <Container>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/locations\">Empresas</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>Transações</BreadcrumbItem>\n        </Breadcrumb>\n        <h2>Transações {start + 1} a {end} de {transactions.length}</h2>\n        <p>\n          Clique sobre uma linha para abrir a transação desejada.\n        </p>\n        <ListGroup style={{ opacity: (cache.isFetching ? 0.5 : 1) }}>\n          {\n            transactions.slice(start, end)\n              .map((transaction, index) =>\n                <ListGroupItem key={index}>\n                  <Link to={\n                    `/transaction\\\n?companyLocation=${transaction.header.companyLocation}\\\n&transactionDate=${transaction.header.transactionDate}\\\n&documentCode=${transaction.header.documentCode}`\n                    }>\n                    <TransactionHeader {...{ transaction }} />\n                  </Link>\n                </ListGroupItem>\n              )\n          }\n        </ListGroup>\n        <p></p>\n        <Pagination style={{ justifyContent: 'center'}}>\n          <PaginationItem disabled={page <= 1}>\n            <Link className=\"page-link\" to={urlToPage(page - 1)}>&laquo;</Link>\n          </PaginationItem>\n          {Array.from({ length: pagesCount })\n            .map((e, index) =>\n            <PaginationItem active={page === index + 1} key={index}>\n              <Link className=\"page-link\" to={urlToPage(index + 1)}>\n                {index + 1}\n              </Link>\n            </PaginationItem>)}\n          <PaginationItem disabled={page >= pagesCount}>\n            <Link className=\"page-link\" to={urlToPage(page + 1)}>&raquo;</Link>\n          </PaginationItem>\n        </Pagination>\n      </Container>\n    );\n  } else if (error) {\n    return (\n      <Alert color=\"danger\">\n        <h2>Erro</h2>\n        <p>{error.message}</p>\n      </Alert>\n    );\n  } else {\n    return (\n      <Alert color=\"primary\">\n        <h2>Carregando...</h2>;\n      </Alert>\n    );\n  }\n}\n\nfunction urlToPage(page: number) {\n  return `/transactions?${query}&page=${page.toString()}`;\n}\n","import * as React from 'react';\n\nexport type Props = { name: string; value: number; currency: string };\n\n/**\n * React component for displaying a description of a monetary value.\n */\nexport function ValueDescription({ name, value, currency = 'BRL' }: Props) {\n  return (\n    <div>\n      <span style={{ float: 'left' }}>{name}</span>\n      <span style={{ float: 'right' }}>\n        {value.toLocaleString('pt-BR', { style: 'currency', currency })}\n      </span>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Entity } from '../models/Entity';\nimport { cityState } from './cityState';\n\nexport type Props = { title: string; entity?: Entity };\n\n/**\n * React component to display an `Entity`.\n * Since `Location` is an `Entity`, it also works for `Location`.\n */\nexport function Entity({ title, entity }: Props) {\n  return(\n    <div>\n      <h4>{title}</h4>\n      {entity &&\n        <div>\n          {entity.federalTaxId}<br />\n          {cityState(entity)}<br />\n          {entity.taxRegime && <span>{entity.taxRegime}<br /></span>}\n          {entity.type && <span>{entity.type}<br /></span>}\n          {entity.suframa && `Suframa: ${entity.suframa}`}\n        </div>\n      }\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Transaction } from '../models/Transaction';\nimport { Row } from 'reactstrap';\nimport Col from 'reactstrap/lib/Col';\nimport * as moment from 'moment';\nimport { ValueDescription } from './ValueDescription';\nimport { Entity } from './Entity';\n\nexport type Props = { transaction: Transaction };\n\n/**\n * React component to display data associated with the entire transaction.\n */\nexport function TransactionHeader({ transaction }: Props) {\n  const header = transaction.header;\n  const currency = header.currency;\n  const calculatedTaxSummary = transaction.calculatedTaxSummary;\n\n  return (\n    <div>\n      <Row>\n        <Col lg=\"4\">\n          <h3>{header.transactionType}</h3>\n        </Col>\n        <Col lg=\"4\">\n          Data: {moment(header.transactionDate)\n            .format('DD/MM/YYYY')}\n        </Col>\n        <Col lg=\"4\">\n          Código: {header.documentCode}\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"4\">\n          <Entity title=\"Empresa\" entity={header.location} />\n        </Col>\n        <Col lg=\"4\">\n          <Entity title=\"Contraparte\" entity={header.entity} />\n        </Col>\n        <Col lg=\"4\">\n          <h4>Resumo</h4>\n          <ValueDescription {...{\n            name: 'Subtotal:',\n            value: calculatedTaxSummary!.subtotal,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'IEC:',\n            value: calculatedTaxSummary!.taxByType.iec.tax,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'IST:',\n            value: calculatedTaxSummary!.taxByType.ist.tax,\n            currency\n          }} /><br />\n          <ValueDescription {...{\n            name: 'ISC:',\n            value: calculatedTaxSummary!.taxByType.isc.tax,\n            currency\n          }} /><br />\n          <hr />\n          <ValueDescription {...{\n            name: 'TOTAL GERAL:',\n            value: calculatedTaxSummary!.grandTotal,\n            currency\n          }} />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import { State } from '../State';\nimport * as Component from '../components/Transactions';\nimport { Action, fetchTransactions } from '../Actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport * as queryString from 'query-string';\n\ntype Props = { location: { search: string } };\n\nfunction mapStateToProps(\n  { transactionsCache }: State,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  const page = Number(query.page || '1');\n\n  return { cache: transactionsCache, page };\n}\n\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<State, any, Action>,\n  { location: { search } }: Props\n): Partial<Component.Props> {\n  const query = queryString.parse(search);\n  delete query.page;\n\n  return { onInit: async () => dispatch(fetchTransactions(query))};\n}\n\n/**\n * Transactions component.\n * Input locations.\n * Output onClick(index).\n */\nexport const Transactions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component.Transactions);\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk, { ThunkDispatch } from 'redux-thunk';\nimport { reducer } from './reducer';\nimport { State } from './State';\nimport { Action } from './Actions';\n\n/**\n * configureStore\n * Configure `Store` and returns it.\n */\nexport function configureStore(\n  preloadedState: State = {\n    locationsCache: { isFetching: false },\n    transactionsCache: { isFetching: false },\n    transactionCache: { isFetching: false }\n  }\n) {\n  return createStore<\n    State,\n    Action,\n    { dispatch: ThunkDispatch<State, {}, Action> },\n    {}\n  >(reducer, preloadedState, applyMiddleware(reduxThunk));\n}\n","import * as React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Locations } from '../containers/Locations';\nimport { configureStore } from '../configureStore';\nimport { Provider } from 'react-redux';\nimport { Transactions } from '../containers/Transactions';\n\nconst store = configureStore();\n\n/**\n * Main App\n */\nexport function App() {\n  return (\n    <Provider {...{ store }}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={redirect('/locations')} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/transactions\" component={Transactions} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nfunction redirect(to: string) {\n  return () => <Redirect to={to} />;\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}