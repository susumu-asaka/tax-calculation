import express from 'express';
import * as http from 'http';
import httpStatus from 'http-status';
import * as superagent from 'superagent';
import { FakeLogger } from './FakeLogger';

const URL_ROOT = 'http://localhost:3000';

describe('API', () => {
  let server: http.Server;
  let logger: FakeLogger;

  async function getServer(app: express.Express, port?: number):
    Promise<http.Server> {
    return new Promise<http.Server>(
      resolve => { server = app.listen(3000, () => { resolve(server); }); }
    );
  }

  beforeAll(async () => {
    const app = express();
    logger = new FakeLogger();
    server = await getServer(app, 3000);
  });
  afterAll(() => {
    server.close();
  });
  it('can load a category by id', async () => {
    const url = `${URL_ROOT}/category/Web Programming`;
    const res = await superagent.get(url);
    expect(res.status)
      .toBe(httpStatus.OK);
    const expected = ['Web Programming', 'Non-Fiction', 'Books'];
  });
  it('can load all categories that have a certain parent', async () => {
    const url = `${URL_ROOT}/categories?parentId=Electronics`;
    const res = await superagent.get(url);
    expect(res.status)
      .toBe(httpStatus.OK);
  });
  it(
    'can load all products in a category sorted by name',
    async () => {
      const url = `${URL_ROOT}/products?categoryId=Books&sortBy=name`;
      const res = await superagent.get(url);
      expect(res.status)
        .toBe(httpStatus.OK);
    });
  it('can search products by name', async () => {
    const url = `${URL_ROOT}/products?name=spanish`;
    const res = await superagent.get(url);
    expect(res.status)
      .toBe(httpStatus.OK);
  });
});
